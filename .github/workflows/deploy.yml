name: deploy
on:
  push:
    tags:
      - v*
    branches:
      - main
  pull_request:
    branches:
      - main # 当pr被合并到main分支时
permissions:
  contents: read

jobs:
  server:
    name: Test
    strategy:
      matrix:
        go-version: [ 1.18.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}
      - name: checkout code
        uses: actions/checkout@v2
#      - name: Download dependencies
#        run: |
#          go get -v -t -d ./...
#          if [ -f Gopkg.toml ]; then
#              curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
#              dep ensure
#          fi
#        working-directory: ./server
#
#      - name: Test and Build
#        run: |
#          go build -v -race
#        working-directory: ./server
      - name: Login to ACR
        uses: aliyun/acr-login@v1
        with:
          login-server: https://registry.cn-hangzhou.aliyuncs.com
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: server/Dockerfile
          push: true
          tags: |
            registry.cn-hangzhou.aliyuncs.com/91go/lm-server:latest
            registry.cn-hangzhou.aliyuncs.com/91go/lm-server:latest

  web:
    name: Frontend build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 14.16.0 ]
    steps:
      - name: Check out branch
        uses: actions/checkout@v2

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build test
        run: |
          npm install
          npm run build
        working-directory: ./web

      - name: Login to ACR
        uses: aliyun/acr-login@v1
        with:
          login-server: https://registry.cn-hangzhou.aliyuncs.com
          username: "${{ secrets.ACR_USERNAME }}"
          password: "${{ secrets.ACR_PASSWORD }}"
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          file: web/Dockerfile
          push: true
          tags: |
            registry.cn-hangzhou.aliyuncs.com/91go/lm-web:latest
            registry.cn-hangzhou.aliyuncs.com/91go/lm-web:latest

  cd:
    name: xxx
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PWD }}
          port: 22
          timeout: 10m
          script_stop: true
          script: |
            cd ~/vps-deploy/www/lm && docker-compose pull && docker-compose up --build -d
name: deploy
on:
  push:
    tags: [v*]
    branches: [main]
  pull_request:
    branches: [main] # 当pr被合并到main分支时
permissions:
  contents: read

jobs:
  server:
    name: push server image to ACR
    strategy:
      matrix:
        go-version: [ 1.18.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}

#      - name: Login to ACR
#        uses: aliyun/acr-login@v1
#        with:
#          login-server: https://registry.cn-hangzhou.aliyuncs.com
#          username: "${{ secrets.ACR_USERNAME }}"
#          password: "${{ secrets.ACR_PASSWORD }}"
#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: server/Dockerfile
#          push: true
#          tags: registry.cn-hangzhou.aliyuncs.com/91go/lm-server:latest
      - uses: docker/login-action@v2
        with:
          username: luckyhacking
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: server/Dockerfile
          push: true
          tags: luckyhacking/mali-server:latest,luckyhacking/mali-server:${{ github.ref_name }}

  web:
    name: push web image to ACR
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 18.6.0 ]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Build
        run: |
          npm install
          npm run build
        working-directory: ./web

#      - name: Login to ACR
#        uses: aliyun/acr-login@v1
#        with:
#          login-server: https://registry.cn-hangzhou.aliyuncs.com
#          username: "${{ secrets.ACR_USERNAME }}"
#          password: "${{ secrets.ACR_PASSWORD }}"
#      - name: Build and push
#        id: docker_build
#        uses: docker/build-push-action@v2
#        with:
#          context: .
#          file: web/Dockerfile
#          push: true
#          tags: registry.cn-hangzhou.aliyuncs.com/91go/lm-web:latest
      - uses: docker/login-action@v2
        with:
          username: luckyhacking
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v2
      - uses: docker/build-push-action@v4
        with:
          context: .
          file: web/Dockerfile
          push: true
          tags: luckyhacking/mali-web:latest,luckyhacking/mali-web:${{ github.ref_name }}

  cd:
    name: cd
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PWD }}
          port: 22
          timeout: 10m
          script_stop: true
          script: |
            cd ~/vps/mali && docker compose pull && docker compose stop web server && docker compose rm -f web server && docker compose up --build -d
    needs: [ server, web ]